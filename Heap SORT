import java.util.*;


public class HeapSort{
    
    public void Sort(int a[],int n){
        
        for(int i=n/2-1;i>=0;i--)
        heapify(a,n,i);
        
        
        for(int i=n-1;i>=0;i--){
            int j=a[0];
            a[0]=a[i];
            a[i]=j;
            
            heapify(a,i,0);
        }
        
    }
    
    void heapify(int a[],int n,int i){
        
        int largest=i;
        int l=2*i+1;
        int r=2*i+2;
        
        if(l<n && a[l]>a[largest])
        largest=l;
        
        if(r<n && a[r]>a[largest])
        largest=r;
        
        if(largest!=i)
        {
            int temp=a[i];
            a[i]=a[largest];
            a[largest]=temp;
            
            heapify(a,n,largest);
        }
    }
    
    void printArray(int a[]){
        int n=a.length;
        
        for(int i=0;i<n;i++)
        System.out.println(a[i]);
        
    }
    
    
    public static void main(String args[]){
        int a[]={4,10,3,5,1};
                HeapSort hs=new HeapSort();


        int n=a.length;
        hs.Sort(a,n);
                        hs.printArray(a);

        
    }
}
